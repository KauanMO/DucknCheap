name: AWS EC2 Deploy

on:
    pull_request: 
        branches:
            - main
        types:
            - closed
    workflow_dispatch: 

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              
            - name: Setup Maven settings
              run: |
                mkdir -p ~/.m2
                cat > ~/.m2/settings.xml <<EOF
                <settings>
                  <servers>
                    <server>
                      <id>github</id>
                      <username>${{ github.actor }}</username>
                      <password>${{ github.token }}</password>
                    </server>
                  </servers>
                </settings>
                EOF


            - name: Build Users service
              run: |
                cd services/users
                mvn clean package -DskipTests
              
            - name: Build Scraper service
              run: |
                cd services/scraper
                mvn clean package -DskipTests
              
            - name: Build Notifier service
              run: |
                cd services/notifier
                mvn clean package -DskipTests

            - name: Copy files
              uses: appleboy/scp-action@v0.1.7
              with:
                host: ${{secrets.EC2_HOST}}
                username: ${{secrets.EC2_USER}}
                key: ${{secrets.EC2_SSH_KEY}}
                source: "./docker-compose.yml,./services"
                target: "~/app"

            - name: Run docker compose
              uses: appleboy/ssh-action@v1.2.0
              with:
                host: ${{secrets.EC2_HOST}}
                username: ${{secrets.EC2_USER}}
                key: ${{secrets.EC2_SSH_KEY}}
                script: |
                    cd ~/app
                    export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
                    export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
                    export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
                    export SECRET_KEY=${{ secrets.SECRET_KEY }}
                    export TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
                    export RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}
                    export RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}
                    docker compose pull
                    docker compose up -d --remove-orphans