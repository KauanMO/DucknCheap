name: AWS EC2 Deploy

on:
    pull_request: 
        branches:
            - main
        types:
            - closed
    workflow_dispatch: 

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            # - name: Set GitHub Package credentials
            #   run: |
            #     echo "GITHUB_ACTOR=${{ github.actor }}" >> $GITHUB_ENV
            #     echo "GB_TOKEN=${{ secrets.GB_TOKEN }}" >> $GITHUB_ENV

            # - name: Configure Maven settings
            #   run: |
            #     mkdir -p ~/.m2
            #     cat > ~/.m2/settings.xml <<EOF
            #     <settings>
            #       <servers>
            #         <server>
            #           <id>github</id>
            #           <username>${{ github.actor }}</username>
            #           <password>${{ secrets.GB_TOKEN }}</password>
            #         </server>
            #       </servers>
            #     </settings>
            #     EOF

            - name: Set up JDK 21
              uses: actions/setup-java@v3
              with:
                java-version: '21'
                distribution: 'temurin'
                cache: maven

            - name: Build Shared lib
              run: |
                cd libs/shared
                mvn clean install -DskipTests

            - name: Build Users service
              run: |
                cd services/users
                mvn clean package -DskipTests
              
            - name: Build Scraper service
              run: |
                cd services/scraper
                mvn clean package -DskipTests
              
            - name: Build Notifier service
              run: |
                cd services/notifier
                mvn clean package -DskipTests

            - name: Copy files
              uses: appleboy/scp-action@v0.1.7
              with:
                host: ${{secrets.EC2_HOST}}
                username: ${{secrets.EC2_USER}}
                key: ${{secrets.EC2_SSH_KEY}}
                source: "./docker-compose.yml,./services,./libs/shared"
                target: "~/app"

            - name: Run docker compose
              uses: appleboy/ssh-action@v1.2.0
              with:
                host: ${{secrets.EC2_HOST}}
                username: ${{secrets.EC2_USER}}
                key: ${{secrets.EC2_SSH_KEY}}
                script: |
                    cd ~/app
                    export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
                    export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
                    export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
                    export SECRET_KEY=${{ secrets.SECRET_KEY }}
                    export TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
                    export RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}
                    export RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}
                    docker compose pull
                    docker compose up -d --remove-orphans